services:
  mongo:
    image: mongo
    container_name: pa-mongo
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_ADMINUSERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_ADMINPASSWORD
      - MONGO_INITDB_DATABASE=$MONGODB_DATABASE
    volumes: 
      - ./database:/docker-entrypoint-initdb.d
      - ./database/data:/data/db
      - ./docker-entrypoint-initdb.d/GraphDB.js:/docker-entrypoint-initdb.d/GraphDB.js:ro
    logging:
      driver: none

  mongo-express:
    image: mongo-express
    container_name: pa-mongo-express
    ports:
      - 8082:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGODB_ADMINUSERNAME
      - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGODB_ADMINPASSWORD
      - ME_CONFIG_MONGODB_SERVER=$MONGODB_SERVER
      - ME_CONFIG_MONGODB_PORT=$MONGODB_PORT
      - ME_CONFIG_MONGODB_DATABASE=$MONGODB_DATABASE
      - ME_CONFIG_MONGODB_URL= mongodb://admin:pass@localhost:27017/
    depends_on:
      - mongo
    restart: unless-stopped
    logging:
      driver: none

  node:
    #container_name: node-dev
    #hostname: node-dev
    #build: ./backend # per produzione
    #decommentare sotto per development
    image: node:lts-stretch-slim
    volumes:
      - ./:/usr/src/app
    command: npm run start:dev --prefix /usr/src/app
    restart: always
    ports:
      - 3000:3000
    environment:
      - MONGO_URI=mongodb://mongo:$MONGODB_PORT/$MONGODB_DATABASE
      - MONGO_USER=$MONGODB_ADMINUSERNAME
      - MONGO_PASS=$MONGODB_ADMINPASSWORD
    env_file:
      - .env
    depends_on:
      - mongo